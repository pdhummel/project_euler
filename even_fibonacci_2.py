#!/usr/bin/python

###############################################################################
# https://projecteuler.net/problem=2
#
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# 
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
#
###############################################################################

import time

MAX__NUMBER = 4000000

###############################################################################
# Outputs the sum of the even-valued fibonacci terms.
###############################################################################
def main():
    start = time.clock()
    total_sum = sum_even_sequence_values()    
    end = time.clock()
    elapsed_time = end - start
    print "The sum of even-valued fibonacci terms is " + str(total_sum)    
    print "The program took " + str(elapsed_time) + " seconds to execute."


###############################################################################
# Returns the sum of the even-valued fibonacci terms.
###############################################################################
def sum_even_sequence_values():    
    total_sum = 2
    previous = 1
    current = 2
    while current < MAX__NUMBER:
        new_value = previous + current
        previous = current
        current = new_value
        if new_value % 2 == 0 and new_value < MAX__NUMBER:
            total_sum += new_value

    return total_sum


###############################################################################
if __name__ == "__main__":
    main()